#include <iostream>
#include <stdio.h>
#include <conio.h>
using namespace std;
struct node{
  char data;l
  node *kiri;
  node *kanan;
};
node *akar = NULL;
node *addnode(node **akar, char isi){
  if((*akar) == NULL){
    node *baru;
    baru = new node;
    baru ->data = isi;
    baru ->kiri = NULL;
    baru ->kanan = NULL;
    (*akar)=baru;
  }
}

node *preOrder(node *akar){
  if(akar != NULL){
    cout<<" "<<akar->data;
    preOrder(akar ->kiri);
    preOrder(akar ->kanan);
  }
}

node *inOrder(node *akar){
  if(akar != NULL){
    inOrder(akar ->kiri);
    cout<<" "<<akar->data;
    inOrder(akar->kanan);
    }
  }

node *postOrder(node *akar){
  if(akar !=NULL){
    postOrder(akar->kiri);
    postOrder(akar->kanan);
    cout<<" "<<akar->data;
  }
}

int main(){
  char abjad;
  cout<<"\nposisi awal tree:\n\n";
  cout<<"\t       A\n\t      / \\\n\t     B   C\n\t    /\n\t   D\n\t  / \\\n\t E   F\n\n";
  addnode(&akar, abjad = 'A');
  addnode(&akar->kiri, abjad = 'B');
  addnode(&akar->kanan, abjad = 'C');
  addnode(&akar->kiri->kiri, abjad = 'D');
  addnode(&akar->kiri->kiri->kiri, abjad = 'E');
  addnode(&akar->kiri->kiri->kanan, abjad = 'F');
  cout<<"\ntampilan preOrder:";
  preOrder(akar);
  cout<<"\ntampilan inOrder:";
  inOrder(akar);
  cout<<"\ntampilan postOrder:";
  postOrder(akar);
}
